# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r
# Default configuration for use with tic package
# tic documentation to get started: https://ropenscilabs.github.io/tic/
# Usually you shouldn't need to change the first part of the file
# DO NOT CHANGE THE CODE BELOW
before_install:
  - R -q -e 'if (!"tidyverse" %in% rownames(installed.packages())) install.packages("tidyverse", dependencies = TRUE)'
  - R -q -e 'if (!"remotes" %in% rownames(installed.packages())) install.packages("remotes")'
  - R -q -e 'if (!identical(try(packageVersion("roxygen2") >= "7.0.0"), TRUE)) install.packages("roxygen2", repos = "https://mran.microsoft.com/snapshot/2019-11-15")'
  - R -q -e 'try(remotes::install_local(dependencies = TRUE, force = TRUE, upgrade = "always", repos = "https://mran.microsoft.com/snapshot/2019-09-15"))'
  - R -q -e 'update.packages(ask = FALSE, repos = "https://mran.microsoft.com/snapshot/2019-09-15")'
  - R -q -e 'remotes::install_github("ropenscilabs/tic@v0.2.13.9020", upgrade = "never", dependencies = TRUE); print(tic::dsl_load()); tic::prepare_all_stages()'
  - R -q -e 'tic::before_install()'
install: R -q -e 'tic::install()'
after_install: R -q -e 'tic::after_install()'
before_script: R -q -e 'tic::before_script()'
script: R -q -e 'tic::script()'
after_success: R -q -e 'tic::after_success()'
after_failure: R -q -e 'tic::after_failure()'
before_deploy: R -q -e 'tic::before_deploy()'
deploy:
  provider: script
  script: R -q -e 'tic::deploy()'
  on:
    all_branches: true
after_deploy: R -q -e 'tic::after_deploy()'
after_script: R -q -e 'tic::after_script()'
# DO NOT CHANGE THE CODE ABOVE

# Custom parts:

# Header
language: r
r: 3.5.3
r_packages:
  - covr
  - desc
  - devtools
  - roxygen2
  - testthat
  - tidyverse
# getOption("repos")
repos:
  CRAN: https://mran.microsoft.com/snapshot/2019-04-15
sudo: false
dist: xenial
cache: packages
latex: false
fortran: true

#env
env:
  global:
  - MAKEFLAGS="-j 2"

#services
services:

#stages
stages:
  - build
  - test
  - name: report
    if: branch = master

#jobs
jobs:
  include:
    - stage: "build"
      name: "build"
      script: R -q -e 'tic::script()'
      if: branch = master OR branch = develop
    - stage: "test"
      name: "testthat"
      script: R -q -e 'tic::script()'
    - stage: "test"
      name: "component-tests"
      script: R -q -e 'tic::script()'
      if: branch = master OR branch = develop
    - stage: "test"
      name: "integration-tests"
      script: R -q -e 'tic::script()'
      if: branch = master OR branch = develop
    - stage: "test"
      name: "coverage-tests"
      script: R -q -e 'tic::script()'
    - stage: "report"
      name: "coverage-report"
      script: R -q -e 'tic::script()'
    - stage: "report"
      name: "build-binder"
      script: R -q -e 'tic::script()'
